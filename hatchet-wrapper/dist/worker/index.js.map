{"version":3,"sources":["../../src/worker/index.ts"],"sourcesContent":["import Hatchet, { Workflow, Worker } from \"@hatchet-dev/typescript-sdk\";\nimport { WorkflowBuilder } from \"src/workflow\";\n\nexport class WorkerBuilder {\n    private workerId: string;\n    private workflows: Workflow[] = [];\n    private hatchetInstance: Hatchet;\n\n    constructor({ hatchetInstance, workerId }: { hatchetInstance: Hatchet, workerId: string }) {\n        this.hatchetInstance = hatchetInstance;\n        this.workerId = workerId;\n    }\n\n    addWorkflow(workflowBuilder: WorkflowBuilder<any, any>): WorkerBuilder {\n        const workflow = workflowBuilder.build();\n        this.workflows.push(workflow);\n        return this;\n    }\n\n    private async build(): Promise<Worker> {\n        const worker = await this.hatchetInstance.worker(this.workerId);\n        for (const workflow of this.workflows) {\n            await worker.registerWorkflow(workflow);\n        }\n        return worker;\n    }\n\n    async start(): Promise<void> {\n        const worker = await this.build();\n        await worker.start();\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGO,IAAM,gBAAN,MAAoB;AAAA,EACf;AAAA,EACA,YAAwB,CAAC;AAAA,EACzB;AAAA,EAER,YAAY,EAAE,iBAAiB,SAAS,GAAmD;AACvF,SAAK,kBAAkB;AACvB,SAAK,WAAW;AAAA,EACpB;AAAA,EAEA,YAAY,iBAA2D;AACnE,UAAM,WAAW,gBAAgB,MAAM;AACvC,SAAK,UAAU,KAAK,QAAQ;AAC5B,WAAO;AAAA,EACX;AAAA,EAEA,MAAc,QAAyB;AACnC,UAAM,SAAS,MAAM,KAAK,gBAAgB,OAAO,KAAK,QAAQ;AAC9D,eAAW,YAAY,KAAK,WAAW;AACnC,YAAM,OAAO,iBAAiB,QAAQ;AAAA,IAC1C;AACA,WAAO;AAAA,EACX;AAAA,EAEA,MAAM,QAAuB;AACzB,UAAM,SAAS,MAAM,KAAK,MAAM;AAChC,UAAM,OAAO,MAAM;AAAA,EACvB;AACJ;","names":[]}